const express = require('express');
const mongoose = require('mongoose');
const jwt = require('jsonwebtoken');
const cors = require('cors');
const User = require('./models/User'); // Import the User model from the models folder
const app = express();

require('dotenv').config();

app.use(cors()); // Enable CORS
app.use(express.json()); // Middleware to parse JSON bodies

// MongoDB connection
mongoose.connect('mongodb://localhost:27017/iit-ropar')
    .then(() => {
        console.log('MongoDB connected');
    })
    .catch(err => {
        console.error('MongoDB connection error:', err);
    });

// Sign-in route
   // Sign-in route
   app.post('/api/auth/signin', async (req, res) => {
       const { email, password } = req.body;

       try {
           // Authenticate user
           const user = await User.findOne({ email });
           if (!user || !(await user.comparePassword(password))) {
               return res.status(401).json({ message: 'Invalid credentials' });
           }

           // Generate JWT using the secret key from .env
           const token = jwt.sign({ id: user._id, email: user.email }, process.env.JWT_SECRET, { expiresIn: '1h' });

           res.json({ token });
       } catch (error) {
           console.error('Error during sign-in:', error);
           res.status(500).json({ message: 'Internal server error' });
       }
   });
   

// Start the server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});
